===next3_snapshot_file_old.patch===

next3: snapshot file - migrate old on-disk format

Snapshot flags and super block field positions have changed.
When old has_snapshot flag is set, copy fields to new position,
clear old flags and fields and set new flags on mount time.

Signed-off-by: Amir Goldstein <amir73il@users.sf.net>

--------------------------------------------------------------------------------
diff -Nuarp a/fs/next3/next3.h b/fs/next3/next3.h
--- a/fs/next3/next3.h	2010-07-26 09:22:04.604952814 +0300
+++ b/fs/next3/next3.h	2010-07-26 09:22:04.075012179 +0300
@@ -458,6 +458,7 @@ struct next3_inode {
 #define EXT2_FLAGS_TEST_FILESYS		0x0004	/* to test development code */
 #define NEXT3_FLAGS_IS_SNAPSHOT		0x0010 /* Is a snapshot image */
 #define NEXT3_FLAGS_FIX_SNAPSHOT	0x0020 /* Corrupted snapshot */
+#define NEXT3_FLAGS_BIG_JOURNAL		0x1000  /* Old big journal */
 
 #define NEXT3_SET_FLAGS(sb,mask) \
 	NEXT3_SB(sb)->s_es->s_flags |= cpu_to_le32(mask)
@@ -628,6 +629,12 @@ struct next3_super_block {
 	__u32	s_reserved[155];	/* Padding to the end of the block */
 };
 
+/* old snapshot field positions */
+#define s_snapshot_list_old	s_reserved[151] /* Old snapshot list head */
+#define s_snapshot_r_blocks_old	s_reserved[152] /* Old reserved for snapshot */
+#define s_snapshot_id_old	s_reserved[153] /* Old active snapshot ID */
+#define s_snapshot_inum_old	s_reserved[154] /* Old active snapshot inode */
+
 #ifdef __KERNEL__
 #include "next3_i.h"
 #include "next3_sb.h"
@@ -708,11 +715,17 @@ static inline int next3_valid_inum(struc
 #define NEXT3_FEATURE_COMPAT_RESIZE_INODE	0x0010
 #define NEXT3_FEATURE_COMPAT_DIR_INDEX		0x0020
 #define NEXT3_FEATURE_COMPAT_EXCLUDE_INODE	0x0080 /* Has exclude inode */
+#define NEXT3_FEATURE_COMPAT_BIG_JOURNAL_OLD	0x1000 /* Old big journal */
+#define NEXT3_FEATURE_COMPAT_EXCLUDE_INODE_OLD	0x2000 /* Old exclude inode */
 
 #define NEXT3_FEATURE_RO_COMPAT_SPARSE_SUPER	0x0001
 #define NEXT3_FEATURE_RO_COMPAT_LARGE_FILE	0x0002
 #define NEXT3_FEATURE_RO_COMPAT_BTREE_DIR	0x0004
 #define NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT	0x0080 /* Next3 has snapshots */
+#define NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT_OLD 0x1000 /* Old has snapshots */
+#define NEXT3_FEATURE_RO_COMPAT_IS_SNAPSHOT_OLD	0x2000 /* Old is snapshot */
+#define NEXT3_FEATURE_RO_COMPAT_FIX_SNAPSHOT_OLD 0x4000 /* Old fix snapshot */
+#define NEXT3_FEATURE_RO_COMPAT_FIX_EXCLUDE_OLD	0x8000 /* Old fix exclude */
 
 #define NEXT3_FEATURE_INCOMPAT_COMPRESSION	0x0001
 #define NEXT3_FEATURE_INCOMPAT_FILETYPE		0x0002
@@ -727,6 +740,10 @@ static inline int next3_valid_inum(struc
 #define NEXT3_FEATURE_RO_COMPAT_SUPP	(NEXT3_FEATURE_RO_COMPAT_SPARSE_SUPER| \
 					 NEXT3_FEATURE_RO_COMPAT_LARGE_FILE| \
 					 NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT| \
+					 NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT_OLD| \
+					 NEXT3_FEATURE_RO_COMPAT_IS_SNAPSHOT_OLD| \
+					 NEXT3_FEATURE_RO_COMPAT_FIX_SNAPSHOT_OLD| \
+					 NEXT3_FEATURE_RO_COMPAT_FIX_EXCLUDE_OLD| \
 					 NEXT3_FEATURE_RO_COMPAT_BTREE_DIR)
 
 /*
diff -Nuarp a/fs/next3/snapshot_ctl.c b/fs/next3/snapshot_ctl.c
--- a/fs/next3/snapshot_ctl.c	2010-07-26 09:22:04.634954313 +0300
+++ b/fs/next3/snapshot_ctl.c	2010-07-26 09:22:04.105017223 +0300
@@ -119,6 +119,47 @@ int next3_snapshot_load(struct super_blo
 	int has_snapshot = 1, has_active = 0;
 
 
+	/* Migrate super block on-disk format */
+	if (NEXT3_HAS_RO_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT_OLD) &&
+			!NEXT3_HAS_RO_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT)) {
+		/* Copy snapshot fields to new positions */
+		active_ino = es->s_snapshot_inum = es->s_snapshot_inum_old;
+		es->s_snapshot_id = es->s_snapshot_id_old;
+		es->s_snapshot_r_blocks_count = es->s_snapshot_r_blocks_old;
+		es->s_snapshot_list = es->s_snapshot_list_old;
+		/* Clear old snapshot fields */
+		es->s_snapshot_inum_old = 0;
+		es->s_snapshot_id_old = 0;
+		es->s_snapshot_r_blocks_old = 0;
+		es->s_snapshot_list_old = 0;
+		/* Copy snapshot flags to new positions */
+		NEXT3_SET_RO_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT);
+		if (NEXT3_HAS_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_COMPAT_EXCLUDE_INODE_OLD))
+			NEXT3_SET_COMPAT_FEATURE(sb,
+					NEXT3_FEATURE_COMPAT_EXCLUDE_INODE);
+		if (NEXT3_HAS_RO_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_RO_COMPAT_FIX_SNAPSHOT_OLD))
+			NEXT3_SET_FLAGS(sb, NEXT3_FLAGS_FIX_SNAPSHOT);
+		if (NEXT3_HAS_RO_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_RO_COMPAT_FIX_EXCLUDE_OLD))
+			NEXT3_SET_FLAGS(sb, NEXT3_FLAGS_FIX_EXCLUDE);
+		/* Clear old snapshot flags */
+		NEXT3_CLEAR_RO_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_RO_COMPAT_HAS_SNAPSHOT_OLD|
+				NEXT3_FEATURE_RO_COMPAT_IS_SNAPSHOT_OLD|
+				NEXT3_FEATURE_RO_COMPAT_FIX_SNAPSHOT_OLD|
+				NEXT3_FEATURE_RO_COMPAT_FIX_EXCLUDE_OLD);
+		/* Clear deprecated big journal flag */
+		NEXT3_CLEAR_COMPAT_FEATURE(sb,
+				NEXT3_FEATURE_COMPAT_BIG_JOURNAL_OLD);
+		NEXT3_CLEAR_FLAGS(sb, NEXT3_FLAGS_BIG_JOURNAL);
+		/* Keep old exclude inode flag b/c inode was not moved yet */
+	}
+
 	if (!*ino_next && active_ino) {
 		/* snapshots list is empty and active snapshot exists */
 		if (!read_only)
