
Signed-off-by: Amir Goldstein <amir73il@users.sf.net>

--------------------------------------------------------------------------------
diff -Nuarp a/fs/next3/balloc.c b/fs/next3/balloc.c
--- a/fs/next3/balloc.c	2010-07-26 09:22:10.085040345 +0300
+++ b/fs/next3/balloc.c	2010-07-26 09:22:09.605099224 +0300
@@ -9,6 +9,9 @@
  *  Enhanced block allocation by Stephen Tweedie (sct@redhat.com), 1993
  *  Big-endian to little-endian byte-swapping/bitmaps by
  *        David S. Miller (davem@caip.rutgers.edu), 1995
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/time.h>
@@ -19,6 +22,7 @@
 #include "next3_jbd.h"
 #include <linux/quotaops.h>
 #include <linux/buffer_head.h>
+#include "snapshot.h"
 
 /*
  * balloc.c contains the blocks allocation and deallocation routines
diff -Nuarp a/fs/next3/buffer.c b/fs/next3/buffer.c
--- a/fs/next3/buffer.c	2010-07-26 09:22:10.185041619 +0300
+++ b/fs/next3/buffer.c	2010-07-26 09:22:09.695038721 +0300
@@ -20,6 +20,8 @@
  * Added 32k buffer block sizes - these are required older ARM systems. - RMK
  *
  * async buffer flushing, 1999 Andrea Arcangeli <andrea@suse.de>
+ *
+ * Tracked buffer read for Next3, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/kernel.h>
@@ -45,6 +47,7 @@
 #include <linux/bitops.h>
 #include <linux/mpage.h>
 #include <linux/bit_spinlock.h>
+#include "snapshot.h"
 
 static int quiet_error(struct buffer_head *bh)
 {
diff -Nuarp a/fs/next3/file.c b/fs/next3/file.c
--- a/fs/next3/file.c	2010-07-26 09:22:10.085040345 +0300
+++ b/fs/next3/file.c	2010-07-26 09:22:09.605099224 +0300
@@ -16,6 +16,8 @@
  *
  *  64-bit file support on 64-bit platforms by Jakub Jelinek
  *	(jj@sunsite.ms.mff.cuni.cz)
+ *
+ *  Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/time.h>
@@ -25,6 +27,7 @@
 #include "next3_jbd.h"
 #include "xattr.h"
 #include "acl.h"
+#include "snapshot.h"
 
 /*
  * Called when an inode is released. Note that this is different
diff -Nuarp a/fs/next3/inode.c b/fs/next3/inode.c
--- a/fs/next3/inode.c	2010-07-26 09:22:10.105109040 +0300
+++ b/fs/next3/inode.c	2010-07-26 09:22:09.625033393 +0300
@@ -20,6 +20,9 @@
  *	(jj@sunsite.ms.mff.cuni.cz)
  *
  *  Assorted race fixes, rewrite of next3_get_block() by Al Viro, 2000
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/module.h>
@@ -40,6 +43,7 @@
 #include <linux/namei.h>
 #include "xattr.h"
 #include "acl.h"
+#include "snapshot.h"
 
 static int next3_writepage_trans_blocks(struct inode *inode);
 
diff -Nuarp a/fs/next3/ioctl.c b/fs/next3/ioctl.c
--- a/fs/next3/ioctl.c	2010-07-26 09:22:10.105109040 +0300
+++ b/fs/next3/ioctl.c	2010-07-26 09:22:09.635034815 +0300
@@ -5,6 +5,9 @@
  * Remy Card (card@masi.ibp.fr)
  * Laboratoire MASI - Institut Blaise Pascal
  * Universite Pierre et Marie Curie (Paris VI)
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/fs.h>
@@ -16,6 +19,7 @@
 #include <linux/time.h>
 #include <linux/compat.h>
 #include <asm/uaccess.h>
+#include "snapshot.h"
 
 long next3_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 {
diff -Nuarp a/fs/next3/Makefile b/fs/next3/Makefile
--- a/fs/next3/Makefile	2010-07-26 09:22:10.075107723 +0300
+++ b/fs/next3/Makefile	2010-07-26 09:22:09.595106855 +0300
@@ -13,6 +13,7 @@ obj-$(CONFIG_NEXT3_FS) += next3.o
 
 next3-y	:= balloc.o bitmap.o dir.o file.o fsync.o ialloc.o inode.o \
 	   ioctl.o namei.o super.o symlink.o hash.o resize.o next3_jbd.o
+next3-y	+= snapshot.o snapshot_ctl.o buffer.o
 
 next3-$(CONFIG_NEXT3_FS_XATTR)	 += xattr.o xattr_user.o xattr_trusted.o
 next3-$(CONFIG_NEXT3_FS_POSIX_ACL) += acl.o
diff -Nuarp a/fs/next3/namei.c b/fs/next3/namei.c
--- a/fs/next3/namei.c	2010-07-26 09:22:10.115042881 +0300
+++ b/fs/next3/namei.c	2010-07-26 09:22:09.635034815 +0300
@@ -22,6 +22,9 @@
  *	Christopher Li, 2002
  *  Hash Tree Directory indexing cleanup
  *	Theodore Ts'o, 2002
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/fs.h>
@@ -40,6 +43,7 @@
 #include "namei.h"
 #include "xattr.h"
 #include "acl.h"
+#include "snapshot.h"
 
 /*
  * define how far ahead to read directories while searching them.
diff -Nuarp a/fs/next3/next3.h b/fs/next3/next3.h
--- a/fs/next3/next3.h	2010-07-26 09:22:10.155037801 +0300
+++ b/fs/next3/next3.h	2010-07-26 09:22:09.675035551 +0300
@@ -11,6 +11,9 @@
  *  linux/include/linux/minix_fs.h
  *
  *  Copyright (C) 1991, 1992  Linus Torvalds
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #ifndef _LINUX_NEXT3_H
@@ -19,6 +22,23 @@
 #include <linux/types.h>
 #include <linux/magic.h>
 
+#ifndef NEXT3_SUPER_MAGIC
+#define NEXT3_SUPER_MAGIC EXT3_SUPER_MAGIC
+/* if the kernel was not patched, next3 is compiled as standalone module */
+#define CONFIG_NEXT3_FS_STANDALONE
+#endif
+
+#ifdef CONFIG_NEXT3_FS_STANDALONE
+/* configuration options for standalone module */
+#define CONFIG_NEXT3_DEFAULTS_TO_ORDERED
+#define CONFIG_NEXT3_FS_XATTR
+#define CONFIG_NEXT3_FS_SECURITY
+#define CONFIG_NEXT3_FS_DEBUG
+#endif
+#if defined(CONFIG_NEXT3_FS_STANDALONE) && defined(CONFIG_FS_POSIX_ACL)
+#define CONFIG_NEXT3_FS_POSIX_ACL
+#endif
+
 /*
  * The second extended filesystem constants/structures
  */
diff -Nuarp a/fs/next3/next3_jbd.c b/fs/next3/next3_jbd.c
--- a/fs/next3/next3_jbd.c	2010-07-26 09:22:10.125107483 +0300
+++ b/fs/next3/next3_jbd.c	2010-07-26 09:22:09.645098713 +0300
@@ -1,8 +1,12 @@
 /*
  * Interface between next3 and JBD
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include "next3_jbd.h"
+#include "snapshot.h"
 
 int __next3_journal_get_undo_access(const char *where, handle_t *handle,
 				struct buffer_head *bh)
diff -Nuarp a/fs/next3/next3_jbd.h b/fs/next3/next3_jbd.h
--- a/fs/next3/next3_jbd.h	2010-07-26 09:22:10.165042138 +0300
+++ b/fs/next3/next3_jbd.h	2010-07-26 09:22:09.685099645 +0300
@@ -10,6 +10,9 @@
  * option, any later version, incorporated herein by reference.
  *
  * Next3-specific journaling extensions.
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #ifndef _LINUX_NEXT3_JBD_H
@@ -209,10 +212,6 @@ static inline int next3_should_journal_d
 {
 	if (!S_ISREG(inode->i_mode))
 		return 1;
-	if (test_opt(inode->i_sb, DATA_FLAGS) == NEXT3_MOUNT_JOURNAL_DATA)
-		return 1;
-	if (NEXT3_I(inode)->i_flags & NEXT3_JOURNAL_DATA_FL)
-		return 1;
 	return 0;
 }
 
@@ -220,8 +219,6 @@ static inline int next3_should_order_dat
 {
 	if (!S_ISREG(inode->i_mode))
 		return 0;
-	if (NEXT3_I(inode)->i_flags & NEXT3_JOURNAL_DATA_FL)
-		return 0;
 	if (test_opt(inode->i_sb, DATA_FLAGS) == NEXT3_MOUNT_ORDERED_DATA)
 		return 1;
 	return 0;
@@ -231,8 +228,6 @@ static inline int next3_should_writeback
 {
 	if (!S_ISREG(inode->i_mode))
 		return 0;
-	if (NEXT3_I(inode)->i_flags & NEXT3_JOURNAL_DATA_FL)
-		return 0;
 	if (test_opt(inode->i_sb, DATA_FLAGS) == NEXT3_MOUNT_WRITEBACK_DATA)
 		return 1;
 	return 0;
diff -Nuarp a/fs/next3/next3_sb.h b/fs/next3/next3_sb.h
--- a/fs/next3/next3_sb.h	2010-07-26 09:22:10.175042653 +0300
+++ b/fs/next3/next3_sb.h	2010-07-26 09:22:09.695038721 +0300
@@ -11,6 +11,8 @@
  *  linux/include/linux/minix_fs_sb.h
  *
  *  Copyright (C) 1991, 1992  Linus Torvalds
+ *
+ *  Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #ifndef _LINUX_NEXT3_SB
diff -Nuarp a/fs/next3/resize.c b/fs/next3/resize.c
--- a/fs/next3/resize.c	2010-07-26 09:22:10.135086386 +0300
+++ b/fs/next3/resize.c	2010-07-26 09:22:09.655034042 +0300
@@ -6,12 +6,16 @@
  * Copyright (C) 2001, 2002 Andreas Dilger <adilger@clusterfs.com>
  *
  * This could probably be made into a module, because it is not often in use.
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 
 #define NEXT3FS_DEBUG
 
 #include "next3_jbd.h"
+#include "snapshot.h"
 
 #include <linux/errno.h>
 #include <linux/slab.h>
diff -Nuarp a/fs/next3/snapshot.c b/fs/next3/snapshot.c
--- a/fs/next3/snapshot.c	2010-07-26 09:22:10.185041619 +0300
+++ b/fs/next3/snapshot.c	2010-07-26 09:22:09.705096819 +0300
@@ -0,0 +1,18 @@
+/*
+ * linux/fs/next3/snapshot.c
+ *
+ * Written by Amir Goldstein <amir73il@users.sf.net>, 2008
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ *
+ * This file is part of the Linux kernel and is made available under
+ * the terms of the GNU General Public License, version 2, or at your
+ * option, any later version, incorporated herein by reference.
+ *
+ * Next3 snapshots core functions.
+ */
+
+#include "snapshot.h"
+
+
+
diff -Nuarp a/fs/next3/snapshot_ctl.c b/fs/next3/snapshot_ctl.c
--- a/fs/next3/snapshot_ctl.c	2010-07-26 09:22:10.195111454 +0300
+++ b/fs/next3/snapshot_ctl.c	2010-07-26 09:22:09.715036670 +0300
@@ -0,0 +1,37 @@
+/*
+ * linux/fs/next3/snapshot_ctl.c
+ *
+ * Written by Amir Goldstein <amir73il@users.sf.net>, 2008
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ *
+ * This file is part of the Linux kernel and is made available under
+ * the terms of the GNU General Public License, version 2, or at your
+ * option, any later version, incorporated herein by reference.
+ *
+ * Next3 snapshots control functions.
+ */
+
+#include "snapshot.h"
+
+
+#define next3_snapshot_reset_bitmap_cache(sb, init) 0
+
+
+/*
+ * Snapshot constructor/destructor
+ */
+
+/* with no exclude inode, exclude bitmap is reset to 0 */
+#define next3_snapshot_init_bitmap_cache(sb, create)	\
+		next3_snapshot_reset_bitmap_cache(sb, 1)
+
+int next3_snapshot_load(struct super_block *sb, struct next3_super_block *es,
+		int read_only)
+{
+	return 0;
+}
+
+void next3_snapshot_destroy(struct super_block *sb)
+{
+}
diff -Nuarp a/fs/next3/snapshot.h b/fs/next3/snapshot.h
--- a/fs/next3/snapshot.h	2010-07-26 09:22:10.195111454 +0300
+++ b/fs/next3/snapshot.h	2010-07-26 09:22:09.715036670 +0300
@@ -0,0 +1,138 @@
+/*
+ * linux/fs/next3/snapshot.h
+ *
+ * Written by Amir Goldstein <amir73il@users.sf.net>, 2008
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ *
+ * This file is part of the Linux kernel and is made available under
+ * the terms of the GNU General Public License, version 2, or at your
+ * option, any later version, incorporated herein by reference.
+ *
+ * Next3 snapshot extensions.
+ */
+
+#ifndef _LINUX_NEXT3_SNAPSHOT_H
+#define _LINUX_NEXT3_SNAPSHOT_H
+
+#include <linux/delay.h>
+#include "next3_jbd.h"
+
+
+#define NEXT3_SNAPSHOT_VERSION "next3 snapshot v1.0.12 (25-Jul-2010)"
+
+/*
+ * use signed 64bit for snapshot image addresses
+ * negative addresses are used to reference snapshot meta blocks
+ */
+#define next3_snapblk_t long long
+
+/*
+ * We assert that snapshot must use a file system with block size == page
+ * size (4K) and that the first file system block is block 0.
+ * Snapshot inode direct blocks are reserved for snapshot meta blocks.
+ * Snapshot inode single indirect blocks are not used.
+ * Snapshot image starts at the first double indirect block.
+ * This way, a snapshot image block group can be mapped with 1 double
+ * indirect block + 32 indirect blocks.
+ */
+#define SNAPSHOT_BLOCK_SIZE		PAGE_SIZE
+#define SNAPSHOT_BLOCK_SIZE_BITS	PAGE_SHIFT
+#define	SNAPSHOT_ADDR_PER_BLOCK		(SNAPSHOT_BLOCK_SIZE / sizeof(__u32))
+#define SNAPSHOT_ADDR_PER_BLOCK_BITS	(SNAPSHOT_BLOCK_SIZE_BITS - 2)
+#define SNAPSHOT_DIR_BLOCKS		NEXT3_NDIR_BLOCKS
+#define SNAPSHOT_IND_BLOCKS		SNAPSHOT_ADDR_PER_BLOCK
+
+#define SNAPSHOT_BLOCKS_PER_GROUP_BITS	15
+#define SNAPSHOT_BLOCKS_PER_GROUP					\
+	(1<<SNAPSHOT_BLOCKS_PER_GROUP_BITS) /* 32K */
+#define SNAPSHOT_BLOCK_GROUP(block)		\
+	((block)>>SNAPSHOT_BLOCKS_PER_GROUP_BITS)
+#define SNAPSHOT_BLOCK_GROUP_OFFSET(block)	\
+	((block)&(SNAPSHOT_BLOCKS_PER_GROUP-1))
+#define SNAPSHOT_BLOCK_TUPLE(block)		\
+	(next3_fsblk_t)SNAPSHOT_BLOCK_GROUP_OFFSET(block), \
+	(next3_fsblk_t)SNAPSHOT_BLOCK_GROUP(block)
+#define SNAPSHOT_IND_PER_BLOCK_GROUP_BITS				\
+	(SNAPSHOT_BLOCKS_PER_GROUP_BITS-SNAPSHOT_ADDR_PER_BLOCK_BITS)
+#define SNAPSHOT_IND_PER_BLOCK_GROUP			\
+	(1<<SNAPSHOT_IND_PER_BLOCK_GROUP_BITS) /* 32 */
+#define SNAPSHOT_DIND_BLOCK_GROUPS_BITS					\
+	(SNAPSHOT_ADDR_PER_BLOCK_BITS-SNAPSHOT_IND_PER_BLOCK_GROUP_BITS)
+#define SNAPSHOT_DIND_BLOCK_GROUPS			\
+	(1<<SNAPSHOT_DIND_BLOCK_GROUPS_BITS) /* 32 */
+
+#define SNAPSHOT_BLOCK_OFFSET				\
+	(SNAPSHOT_DIR_BLOCKS+SNAPSHOT_IND_BLOCKS)
+#define SNAPSHOT_BLOCK(iblock)					\
+	((next3_snapblk_t)(iblock) - SNAPSHOT_BLOCK_OFFSET)
+#define SNAPSHOT_IBLOCK(block)						\
+	(next3_fsblk_t)((block) + SNAPSHOT_BLOCK_OFFSET)
+
+#define SNAPSHOT_BYTES_OFFSET					\
+	(SNAPSHOT_BLOCK_OFFSET << SNAPSHOT_BLOCK_SIZE_BITS)
+#define SNAPSHOT_ISIZE(size)			\
+	((size) + SNAPSHOT_BYTES_OFFSET)
+
+#define SNAPSHOT_SET_SIZE(inode, size)				\
+	(NEXT3_I(inode)->i_disksize = SNAPSHOT_ISIZE(size))
+#define SNAPSHOT_SIZE(inode)					\
+	(NEXT3_I(inode)->i_disksize - SNAPSHOT_BYTES_OFFSET)
+#define SNAPSHOT_BLOCKS(inode)						\
+	(SNAPSHOT_SIZE(inode) >> SNAPSHOT_BLOCK_SIZE_BITS)
+#define SNAPSHOT_SET_ENABLED(inode)				\
+	i_size_write((inode), NEXT3_I(inode)->i_disksize)
+#define SNAPSHOT_SET_DISABLED(inode)		\
+	i_size_write((inode), 0)
+
+
+
+#define next3_snapshot_cow(handle, inode, bh, cow) 0
+
+#define next3_snapshot_move(handle, inode, block, num, move) (num)
+
+/*
+ * Block access functions
+ */
+
+
+/*
+ * Snapshot constructor/destructor
+ */
+extern int next3_snapshot_load(struct super_block *sb,
+		struct next3_super_block *es, int read_only);
+extern int next3_snapshot_update(struct super_block *sb, int cleanup,
+		int read_only);
+extern void next3_snapshot_destroy(struct super_block *sb);
+
+static inline int init_next3_snapshot(void)
+{
+	return 0;
+}
+
+static inline void exit_next3_snapshot(void)
+{
+}
+
+
+/* balloc.c */
+extern struct buffer_head *read_block_bitmap(struct super_block *sb,
+					     unsigned int block_group);
+
+/* namei.c */
+
+/* inode.c */
+extern next3_fsblk_t next3_get_inode_block(struct super_block *sb,
+					   unsigned long ino,
+					   struct next3_iloc *iloc);
+
+/* super.c */
+
+
+
+
+
+
+
+
+#endif	/* _LINUX_NEXT3_SNAPSHOT_H */
diff -Nuarp a/fs/next3/super.c b/fs/next3/super.c
--- a/fs/next3/super.c	2010-07-26 09:22:10.145040457 +0300
+++ b/fs/next3/super.c	2010-07-26 09:22:09.665100120 +0300
@@ -14,6 +14,9 @@
  *
  *  Big-endian to little-endian byte-swapping/bitmaps by
  *        David S. Miller (davem@caip.rutgers.edu), 1995
+ *
+ * Copyright (C) 2008-2010 CTERA Networks
+ * Added snapshot support, Amir Goldstein <amir73il@users.sf.net>, 2008
  */
 
 #include <linux/module.h>
@@ -44,6 +47,7 @@
 #include "xattr.h"
 #include "acl.h"
 #include "namei.h"
+#include "snapshot.h"
 
 #ifdef CONFIG_NEXT3_DEFAULTS_TO_ORDERED
   #define NEXT3_MOUNT_DEFAULT_DATA_MODE NEXT3_MOUNT_ORDERED_DATA
@@ -402,6 +406,7 @@ static void next3_put_super (struct supe
 
 	lock_kernel();
 
+	next3_snapshot_destroy(sb);
 	next3_xattr_put_super(sb);
 	err = journal_destroy(sbi->s_journal);
 	sbi->s_journal = NULL;
@@ -1658,6 +1663,18 @@ static int next3_fill_super (struct supe
 			    NULL, 0))
 		goto failed_mount;
 
+	/* Next3 unsupported features */
+	if (sbi->s_mount_opt & NEXT3_MOUNT_JOURNAL_DATA) {
+		printk(KERN_ERR "NEXT3-fs: journaled data option is not "
+				"supported\n");
+		goto failed_mount;
+	}
+	if (sbi->s_jquota_fmt) {
+		printk(KERN_ERR "NEXT3-fs: journaled quota options are not "
+				"supported.\n");
+		goto failed_mount;
+	}
+
 	sb->s_flags = (sb->s_flags & ~MS_POSIXACL) |
 		((sbi->s_mount_opt & NEXT3_MOUNT_POSIX_ACL) ? MS_POSIXACL : 0);
 
@@ -1689,8 +1706,8 @@ static int next3_fill_super (struct supe
 	}
 	blocksize = BLOCK_SIZE << le32_to_cpu(es->s_log_block_size);
 
-	if (blocksize < NEXT3_MIN_BLOCK_SIZE ||
-	    blocksize > NEXT3_MAX_BLOCK_SIZE) {
+	/* Block size must be equal to page size */
+	if (blocksize != SNAPSHOT_BLOCK_SIZE) {
 		printk(KERN_ERR
 		       "NEXT3-fs: Unsupported filesystem blocksize %d on %s.\n",
 		       blocksize, sb->s_id);
@@ -1974,6 +1991,9 @@ static int next3_fill_super (struct supe
 	}
 
 	next3_setup_super (sb, es, sb->s_flags & MS_RDONLY);
+	if (next3_snapshot_load(sb, es, sb->s_flags & MS_RDONLY))
+		/* XXX: how to fail mount/force read-only at this point? */
+		next3_error(sb, __func__, "load snapshot failed\n");
 	/*
 	 * akpm: core read_super() calls in here with the superblock locked.
 	 * That deadlocks, because orphan cleanup needs to lock the superblock
@@ -2991,7 +3011,12 @@ static int __init init_next3_fs(void)
         err = register_filesystem(&next3_fs_type);
 	if (err)
 		goto out;
+	err = init_next3_snapshot();
+	if (err)
+		goto out_fs;
 	return 0;
+out_fs:
+	unregister_filesystem(&next3_fs_type);
 out:
 	destroy_inodecache();
 out1:
@@ -3001,6 +3026,7 @@ out1:
 
 static void __exit exit_next3_fs(void)
 {
+	exit_next3_snapshot();
 	unregister_filesystem(&next3_fs_type);
 	destroy_inodecache();
 	exit_next3_xattr();
